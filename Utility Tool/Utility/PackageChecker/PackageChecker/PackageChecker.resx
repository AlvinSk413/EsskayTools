<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>